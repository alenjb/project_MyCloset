<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jb.board.mapper.BoardMapper">

	<!-- 리스트 -->
	<select id="list" resultType="com.jb.board.vo.BoardVO">
		select no, title, writer, writeDate, hit
		from(	
			select (@ROWNUM:=@ROWNUM+1) AS RNUM, no, title, writer, writeDate, hit
			from(
				select no, title, writer, writeDate, hit
				from board
				<include refid="search"/>
				order by no desc
				) AS A, (SELECT @ROWNUM:=0) AS B
                
			) AS C
            where C.RNUM between #{startRow} and #{endRow}
	</select>

	<!-- //1-2. 전체 데이터 개수 -->
	<select id="getTotalRow" resultType="long">
		select count(*) from board
		<include refid="search" />
	</select>
<!-- 	검색족던 처리를 위한 태그- 부분태그: sql -->
	<sql id="search">
		<if test="word != null and word!= ''.toString()">
			where 
			<if test="key =='t'.toString()">
				title like CONCAT('%',#{word},'%')

			</if>
			<if test="key =='c'.toString()">
				content like CONCAT('%',#{word},'%')

			</if>
			<if test="key =='w'.toString()">
				writer like CONCAT('%',#{word},'%')

			</if>
			<if test="key =='tc'.toString()">
				title like CONCAT('%',#{word},'%')

				or content like CONCAT('%',#{word},'%')

			</if>			
			<if test="key =='tw'.toString()">
				title like CONCAT('%',#{word},'%')

				or writer like CONCAT('%',#{word},'%')

			</if>			
			<if test="key =='cw'.toString()">
				content like CONCAT('%',#{word},'%')

				or writer like CONCAT('%',#{word},'%')

			</if>			
			<if test="key =='tcw'.toString()">
				title like CONCAT('%',#{word},'%')

				or content like CONCAT('%',#{word},'%')

				or writer like CONCAT('%',#{word},'%')

				
			</if>			

		</if>
	</sql>
	
	<!-- 보기 -->
	<select id="view" resultType="com.jb.board.vo.BoardVO">
		select no, title, content, writer,
		writeDate, hit
		from board
		where no =
		#{no}
	</select>
	<!-- 조회수 1 증가 -->
	<update id="increase">
		update board
		set hit = hit +1
		where no =#{no}
	</update>


	<!-- 글쓰기 -->
	<insert id="write">
		insert into board(title, content, writer)
		values(#{title}, #{content}, #{writer})
	</insert>

	<!-- //4. 수정 -->
	<update id="update">
		update board set title= #{title}, content
		=#{content}, writer=#{writer}
		where no = #{no}
	</update>

	<!-- //5. 삭제 -->
	<delete id="delete">
		delete from board
		where no= #{no}
	</delete>

</mapper>