/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-03-24 14:05:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입 폼</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function () {\r\n");
      out.write("	\r\n");
      out.write("	//id 중복체크 변수, 비밀번호와 비밀번호 확인이 같은지 체크 변수 -> 전역변수 선언\r\n");
      out.write("	var idCheck = false;\r\n");
      out.write("	var pwCheck = false;\r\n");
      out.write("	// datepicker 클래스 이벤트 - 적정한 옵션을 넣어서 초기화 시켜 준다. 기본 datepicker()로 사용 가능\r\n");
      out.write("\r\n");
      out.write("	   $(\".datepicker\").datepicker({\r\n");
      out.write("		   changeMonth: true,\r\n");
      out.write("		   changeYear: true,\r\n");
      out.write("		   dateFormat: \"yy-mm-dd\",\r\n");
      out.write("		   dayNamesMin: [ \"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\" ],\r\n");
      out.write("		   monthNamesShort: [ \"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\" ],\r\n");
      out.write("	   });\r\n");
      out.write("	  \r\n");
      out.write("	   // datepicker 클래스 이벤트\r\n");
      out.write("\r\n");
      out.write("	   var now = new Date();\r\n");
      out.write("	   var startYear = now.getFullYear();\r\n");
      out.write("	   var yearRange = (startYear - 100) +\":\" + startYear ;\r\n");
      out.write("\r\n");
      out.write("	   // datepicker - 초기값으로 셋팅하는 방법을 사용하면 2번째는 무시 당한다.\r\n");
      out.write("	   //원래 있던 datepicker에 option을 추가하는 방법이다.\r\n");
      out.write("	   $( \".datepicker\" ).datepicker(\"option\", {\r\n");
      out.write("	      \"maxDate\" : new Date(),\r\n");
      out.write("	      yearRange: yearRange\r\n");
      out.write("	   });\r\n");
      out.write("	   \r\n");
      out.write("	   //회원가입 전처리 - 유효성 검사\r\n");
      out.write("	   $(\"#writeForm\").submit(function () {\r\n");
      out.write("\r\n");
      out.write("		   alert(\"회원 등록 처리\");\r\n");
      out.write("		   //submit을 무시 시킨다.\r\n");
      out.write("		   //return false;\r\n");
      out.write("	});\r\n");
      out.write("	   \r\n");
      out.write("	   //아이디 실시간 중복 체크\r\n");
      out.write("	   $(\"#id\").keyup(function () {\r\n");
      out.write("		  idCheck=false;\r\n");
      out.write("		  var id= $(\"#id\").val();\r\n");
      out.write("		  id=$.trim(id);\r\n");
      out.write("		  $(\"#id\").val(id);\r\n");
      out.write("// 		  alert(id);\r\n");
      out.write("		//4자 미만\r\n");
      out.write("		if(id.length <4){\r\n");
      out.write("			$(\"#idCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("			$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("			$(\"#idCheckDiv\").text(\"아이디는 4글자 이상 입력하셔야합니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("			}\r\n");
      out.write("		//20초과\r\n");
      out.write("		if(id.length >20){\r\n");
      out.write("			$(\"#idCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("			$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("			$(\"#idCheckDiv\").text(\"아이디는 20글자 이내로 입력하셔야합니다.\");\r\n");
      out.write("			return;		\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	//서버로 가서 아이디 중복 체크를 하러 가자 ->url과 입력 데이터는 바뀌면 안된다. ->Ajax\r\n");
      out.write("	//url /member/idCheck\r\n");
      out.write("	//가져온 데이터가 null이면 사용가능, 있으면 중복\r\n");
      out.write("	//result -> 서버에서 전달해 주는 데이터\r\n");
      out.write("	$(\"#idCheckDiv\").load(\"/member/idCheck?id=\"+id, function(result){\r\n");
      out.write("		//중복이 되지 않은 경우\r\n");
      out.write("		$(\"idCheckDiv\").removeClass(\"alert-success alert-danger\");\r\n");
      out.write("		//중복 O 배경은 빨간색\r\n");
      out.write("		if(result.indexOf(\"가능한\") == -1){\r\n");
      out.write("			$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("			idCheck= false;\r\n");
      out.write("		}else{\r\n");
      out.write("			//중복 X 배경은 파란색\r\n");
      out.write("			$(\"#idCheckDiv\").removeClass(\"alert-danger\");\r\n");
      out.write("			$(\"#idCheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("			idCheck= true;\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	   });\r\n");
      out.write("		//비밀번호 처리 이벤트\r\n");
      out.write("		$(\"#pw\").keyup(function () {\r\n");
      out.write("			pwCheck= false;\r\n");
      out.write("//			$(this)== $(\"pw\")\r\n");
      out.write("			var pw=$(this).val()\r\n");
      out.write("// 			alert(pw.length);\r\n");
      out.write("\r\n");
      out.write("//			4글자 미만 처리\r\n");
      out.write("			if(pw.length <4){\r\n");
      out.write("				$(\"#pwCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("				$(\"#pwCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pwCheckDiv\").text(\"비밀번호는 4글자 이상 입력하셔야합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("//			20글자 초과 처리\r\n");
      out.write("			if(pw.length >20){\r\n");
      out.write("				$(\"#pwCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("				$(\"#pwCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pwCheckDiv\").text(\"비밀번호는 20글자 미만으로 입력하셔야합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				//4~20자 사이 -> pw와 pw2 같은지 체크\r\n");
      out.write("				var pw2=$(\"#pw2\").val();\r\n");
      out.write("				if(pw==pw2){\r\n");
      out.write("					//비밀번호가 같은 경우\r\n");
      out.write("					$(\"#pwCheckDiv, #pw2CheckDiv\").removeClass(\"alert-danger\");\r\n");
      out.write("					$(\"#pwCheckDiv, #pw2CheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("					$(\"#pwCheckDiv, #pw2CheckDiv\").text(\"사용가능한 비밀번호 입니다.\");\r\n");
      out.write("					pwCheck = true;\r\n");
      out.write("				}else{//비밀번호가 다른경우\r\n");
      out.write("					$(\"#pwCheckDiv, #pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("					$(\"#pwCheckDiv, #pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("					$(\"#pwCheckDiv\").text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("					if(pw2.length < 4)\r\n");
      out.write("						$(\"#pw2CheckDiv\").text(\"비밀번호는 4글자 이상 입력하셔야합니다.\");\r\n");
      out.write("					else if (pw2.length > 20)\r\n");
      out.write("						$(\"#pw2CheckDiv\").text(\"비밀번호는 20글자 미만으로 입력하셔야합니다.\");\r\n");
      out.write("					else\r\n");
      out.write("						$(\"#pw2CheckDiv\").text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("		});\r\n");
      out.write("		//비밀번호 확인 처리 이벤트\r\n");
      out.write("		$(\"#pw2\").keyup(function () {\r\n");
      out.write("			var pw2=$(this).val()\r\n");
      out.write("// 			alert(pw2.length);\r\n");
      out.write("			\r\n");
      out.write("//			4글자 미만 처리\r\n");
      out.write("			if(pw2.length <4){\r\n");
      out.write("				$(\"#pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("				$(\"#pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pw2CheckDiv\").text(\"비밀번호는 4글자 이상 입력하셔야합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("//			20글자 초과 처리\r\n");
      out.write("			if(pw2.length >20){\r\n");
      out.write("				$(\"#pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("				$(\"#pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pw2CheckDiv\").text(\"비밀번호는 20글자 미만으로 입력하셔야합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("\r\n");
      out.write("			//4~20자 사이 -> pw와 pw2 같은지 체크\r\n");
      out.write("			var pw=$(\"#pw\").val();\r\n");
      out.write("			if(pw==pw2){\r\n");
      out.write("				//비밀번호가 같은 경우\r\n");
      out.write("				$(\"#pw2CheckDiv, #pwCheckDiv\").removeClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pw2CheckDiv, #pwCheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("				$(\"#pw2CheckDiv, #pwCheckDiv\").text(\"사용가능한 비밀번호 입니다.\");\r\n");
      out.write("				pwCheck=true;\r\n");
      out.write("			}else{//비밀번호가 다른경우\r\n");
      out.write("				$(\"#pw2CheckDiv, #pwCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("				$(\"#pw2CheckDiv, #pwCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("				$(\"#pw2CheckDiv\").text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				if(pw.length < 4)\r\n");
      out.write("					$(\"#pwCheckDiv\").text(\"비밀번호는 4글자 이상 입력하셔야합니다.\");\r\n");
      out.write("				else if (pw2.length > 20)\r\n");
      out.write("					$(\"#pwCheckDiv\").text(\"비밀번호는 20글자 미만으로 입력하셔야합니다.\");\r\n");
      out.write("				else\r\n");
      out.write("					$(\"#pwCheckDiv\").text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		});   \r\n");
      out.write("		//비밀번호 처리 이벤트의 끝\r\n");
      out.write("		\r\n");
      out.write("		//회원 가입 이벤트\r\n");
      out.write("		$(\"#writeForm\").submit(function () {\r\n");
      out.write("			\r\n");
      out.write("// 			alert(\"아이디 체크: \"+idCheck + \"\\n비밀번호 체크: \"+pwCheck)\r\n");
      out.write("			\r\n");
      out.write("			//아이디 중복체크 -사용 가능한 아이디인지 확인\r\n");
      out.write(" 			if (!idCheck){\r\n");
      out.write(" 				alert(\"중복이 되지않는 아이디를 사용해야합니다.\");\r\n");
      out.write(" 				$(\"#id\").focus();\r\n");
      out.write(" 				//form 전송을 무시시킨다.\r\n");
      out.write(" 				return false;\r\n");
      out.write(" 				\r\n");
      out.write(" 			}\r\n");
      out.write(" 			\r\n");
      out.write("			//비밀번호와 비밀번호 왁인\r\n");
      out.write(" 			if (!pwCheck){\r\n");
      out.write(" 				alert(\"비밀번호와 비밀번호 확인의 길이가 4~20이내이고 같아야 합니다.\");\r\n");
      out.write(" 				$(\"#pw\").focus();\r\n");
      out.write(" 				//form 전송을 무시시킨다.\r\n");
      out.write(" 				return false;\r\n");
      out.write(" 				\r\n");
      out.write(" 			}\r\n");
      out.write("			\r\n");
      out.write("			//form 전송을 무시시킨다. -> 나중에 꼭 주석처리해야됨\r\n");
      out.write("			//return false;\r\n");
      out.write("		});\r\n");
      out.write("});//$(function의 끝)\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h2>회원가입 폼</h2>\r\n");
      out.write("		<form action=\"write.do\" method=\"post\" enctype=\"multipart/form-data\" id=\"writeForm\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for =\"id\">아이디</label>\r\n");
      out.write("				<input id=\"id\" name=\"id\" required=\"required\" pattern=\"[A-Za-z0-9]{4,20}\" placeholder=\"아이디 입력\"\r\n");
      out.write("				class=\"form-control\" autocomplete=\"off\">\r\n");
      out.write("				<div class=\"alert alert-danger\" id=\"idCheckDiv\">아이디는 4글자 이상 입력하셔야합니다.	</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for =\"pw\">비밀번호</label>\r\n");
      out.write("				<input id=\"pw\" name=\"pw\" required=\"required\" pattern=\".{4,20}\" placeholder=\"비밀번호 입력\"\r\n");
      out.write("				class=\"form-control\" type=\"password\">\r\n");
      out.write("				<div id=\"pwCheckDiv\" class=\"alert alert-danger\">비밀번호는 4자 이상이어야합니다.</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for =\"pw2\">비밀번호 확인</label>\r\n");
      out.write("				<input id=\"pw2\" name=\"pw2\" required=\"required\" pattern=\".{4,20}\" placeholder=\"비밀번호 확인 입력\"\r\n");
      out.write("				class=\"form-control\" type=\"password\">\r\n");
      out.write("				<div id=\"pw2CheckDiv\" class=\"alert alert-danger\">비밀번호는 4자 이상이어야합니다.</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"name\">이름</label> <input id=\"name\" name=\"name\"\r\n");
      out.write("					required=\"required\" pattern=\"[가-힣]{2,10}\"\r\n");
      out.write("					placeholder=\"이름 입력\" class=\"form-control\" >\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>성별</label> \r\n");
      out.write("				<div>\r\n");
      out.write("					<label class=\"radio-inline\"><input type=\"radio\" name=\"gender\" checked value=\"남자\">남자</label>\r\n");
      out.write("					<label class=\"radio-inline\"><input type=\"radio\" name=\"gender\" value=\"여자\">여자</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"birth\">생년월일</label> \r\n");
      out.write("				<input id=\"birth\" name=\"birth\" required=\"required\" placeholder=\"생년월일 입력\" class=\"form-control datepicker\" autocomplete=\"off\" >\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"tel\">연락처</label> \r\n");
      out.write("				<input id=\"tel\" name=\"tel\" placeholder=\"연락처 입력\" class=\"form-control\" >\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"email\">이메일</label> \r\n");
      out.write("				<input id=\"email\" name=\"email\" placeholder=\"이메일 입력\" required=\"required\" class=\"form-control\" >\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"photoFile\">사진</label> \r\n");
      out.write("				<input id=\"photoFile\" name=\"photoFile\" type=\"file\"  class=\"form-control\" >\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<button class=\"btn btn-default\">등록</button>\r\n");
      out.write("			<button class=\"btn btn-default\" type=\"reset\">새로입력</button>\r\n");
      out.write("			<button class=\"btn btn-default cancelBtn\" type=\"button\" >취소</button>\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
